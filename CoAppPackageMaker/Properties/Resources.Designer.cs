//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoAppPackageMaker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CoAppPackageMaker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If your files need to link to multiple other assemblies, one manifest[] section will be required for each other assembly..
        /// </summary>
        internal static string btnAddManifest {
            get {
                return ResourceManager.GetString("btnAddManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string CompatibilityPolicyMaximum {
            get {
                return ResourceManager.GetString("CompatibilityPolicyMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string CompatibilityPolicyMinimum {
            get {
                return ResourceManager.GetString("CompatibilityPolicyMinimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string CompatibilityPolicyVersions {
            get {
                return ResourceManager.GetString("CompatibilityPolicyVersions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string LicenceType {
            get {
                return ResourceManager.GetString("LicenceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string LicenseUrl {
            get {
                return ResourceManager.GetString("LicenseUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a cosmetic string that contains the version the author has assigned to the product. (ie, this can be &quot;1.0f&quot; instead of in the four-digit-version &quot;1.0.9.0&quot;..
        /// </summary>
        internal static string MetadataAuthorVersion {
            get {
                return ResourceManager.GetString("MetadataAuthorVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A URL pointing to the location of a given product&apos;s Bug Tracker..
        /// </summary>
        internal static string MetadataBugTracker {
            get {
                return ResourceManager.GetString("MetadataBugTracker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A full-text description of the software package..
        /// </summary>
        internal static string MetadataDescription {
            get {
                return ResourceManager.GetString("MetadataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more license-references that specify the license for the package..
        /// </summary>
        internal static string MetadataLicenses {
            get {
                return ResourceManager.GetString("MetadataLicenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An integer value ranging from -100 (very unstable) to 100 (very stable) to indicate to consumers the relative stability of the contents of the package..
        /// </summary>
        internal static string MetadataStability {
            get {
                return ResourceManager.GetString("MetadataStability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A short description of the package..
        /// </summary>
        internal static string MetadataSummary {
            get {
                return ResourceManager.GetString("MetadataSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binary architecture of the contents of the package. It is not permitted to have multiple binary architectures in the same package..
        /// </summary>
        internal static string PackageArchitecture {
            get {
                return ResourceManager.GetString("PackageArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cosmetic name for the product being packaged..
        /// </summary>
        internal static string PackageDisplayName {
            get {
                return ResourceManager.GetString("PackageDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more URLs of feed locations that may be consulted when looking for a package upgrade..
        /// </summary>
        internal static string PackageFeed {
            get {
                return ResourceManager.GetString("PackageFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more URLs that will return the package file. The URL must not be a referencing webpage, as this is the URL that the package manager will attempt to fetch the package from directly..
        /// </summary>
        internal static string PackageLocation {
            get {
                return ResourceManager.GetString("PackageLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full name of the package, without any version, platform or public key information..
        /// </summary>
        internal static string PackageName {
            get {
                return ResourceManager.GetString("PackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An identity-reference that contains the name, email and web address of the person or organization that created this package. This is not necessarily the author, of which should be listed in the metadata/contributors property..
        /// </summary>
        internal static string PackagePublisher {
            get {
                return ResourceManager.GetString("PackagePublisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The four-digit-version of the package. (ie, 1.2.3.4).
        /// </summary>
        internal static string PackageVersion {
            get {
                return ResourceManager.GetString("PackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SigningCompany {
            get {
                return ResourceManager.GetString("SigningCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SigningDescription {
            get {
                return ResourceManager.GetString("SigningDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SigningFileVersionAttribute {
            get {
                return ResourceManager.GetString("SigningFileVersionAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SigningProductNameAttribute {
            get {
                return ResourceManager.GetString("SigningProductNameAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SigningProductVersion {
            get {
                return ResourceManager.GetString("SigningProductVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SigningReplaceSignature {
            get {
                return ResourceManager.GetString("SigningReplaceSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SingningInclude {
            get {
                return ResourceManager.GetString("SingningInclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TabCompatibilityPolicy {
            get {
                return ResourceManager.GetString("TabCompatibilityPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TabDefine {
            get {
                return ResourceManager.GetString("TabDefine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TabLicense {
            get {
                return ResourceManager.GetString("TabLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If your package links to assemblies in another CoApp package, it may be necessary to embed a manifest into any files from this package which uses those other assemblies..
        /// </summary>
        internal static string TabManifest {
            get {
                return ResourceManager.GetString("TabManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata rule contains additional cosmetic data about the contents of the package..
        /// </summary>
        internal static string TabMetadata {
            get {
                return ResourceManager.GetString("TabMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package rule contains the manditory data for creating a package..
        /// </summary>
        internal static string TabPackage {
            get {
                return ResourceManager.GetString("TabPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Rule  Value.
        /// </summary>
        internal static string TabPackageEvaluated {
            get {
                return ResourceManager.GetString("TabPackageEvaluated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Rule Source Value.
        /// </summary>
        internal static string TabPackageSourceValue {
            get {
                return ResourceManager.GetString("TabPackageSourceValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Rule  Source String.
        /// </summary>
        internal static string TabPackageSourseString {
            get {
                return ResourceManager.GetString("TabPackageSourseString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TabRequires {
            get {
                return ResourceManager.GetString("TabRequires", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TabSigning {
            get {
                return ResourceManager.GetString("TabSigning", resourceCulture);
            }
        }
    }
}
